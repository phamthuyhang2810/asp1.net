import React, { useEffect, useState } from 'react';
import api from '../../services/Api'; // ƒê·∫£m b·∫£o ƒë√∫ng ƒë∆∞·ªùng d·∫´n
import { Link } from 'react-router-dom';
import '../../css/ProductList.css'; // ƒê·∫£m b·∫£o b·∫°n ƒë√£ t·∫°o file CSS n√†y
import Navbar from '../../components/Navbar';
import Footer from '../../components/Footer';

const ProductList = ({ handleAddToCart, handleAddToFavorites }) => {
  const [products, setProducts] = useState([]);
  const [categories, setCategories] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState(''); // L∆∞u danh m·ª•c ƒë∆∞·ª£c ch·ªçn

  // L·∫•y danh s√°ch danh m·ª•c khi component ƒë∆∞·ª£c mount
  useEffect(() => {
    api.get('/Category')
      .then((res) => setCategories(res.data))
      .catch((err) => console.error('L·ªói API danh m·ª•c:', err));
  }, []);

  // L·∫•y danh s√°ch s·∫£n ph·∫©m theo danh m·ª•c
  useEffect(() => {
    const endpoint = selectedCategory
      ? `/product/category/${selectedCategory}` // ƒê∆∞·ªùng d·∫´n API m·ªõi
      : '/Product'; // N·∫øu kh√¥ng ch·ªçn danh m·ª•c, l·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
    console.log('G·ªçi API:', endpoint); // Log URL API ƒë·ªÉ ki·ªÉm tra
    api.get(endpoint)
      .then((res) => {
        console.log('D·ªØ li·ªáu s·∫£n ph·∫©m:', res.data); // Log d·ªØ li·ªáu tr·∫£ v·ªÅ
        setProducts(res.data);
      })
      .catch((err) => console.error('L·ªói API s·∫£n ph·∫©m:', err));
  }, [selectedCategory]);

  const handleAddToCartWithAlert = (product) => {
    handleAddToCart(product);
    alert(`ƒê√£ th√™m "${product.name}" v√†o gi·ªè h√†ng!`);
  };

  const handleAddToFavoritesWithAlert = (product) => {
    handleAddToFavorites(product);
    alert(`ƒê√£ th√™m "${product.name}" v√†o danh s√°ch y√™u th√≠ch!`);
  };

  return (
    <div className="product-page" style={{ paddingTop: '80px' }}>
      <Navbar />
      <h2 className="title">üíô Danh s√°ch s·∫£n ph·∫©m üíñ</h2>

      {/* Dropdown ch·ªçn danh m·ª•c */}
      <div className="category-filter">
        <label htmlFor="category">Ch·ªçn danh m·ª•c:</label>
        <select
          id="category"
          value={selectedCategory}
          onChange={(e) => setSelectedCategory(e.target.value)}
        >
          <option value="">T·∫•t c·∫£</option>
          {categories.map((category) => (
            <option key={category.id} value={category.id}>
              {category.name}
            </option>
          ))}
        </select>
      </div>

      <div className="product-grid">
        {products && products.length > 0 ? (
          products.map((p) => (
            <div key={p.id} className="product-card">
              <img
                src={`http://localhost:5001/api/Product/image/${p.image}`}
                alt={p.name}
                className="product-image"
                onError={(e) => {
                  e.target.onerror = null; // NgƒÉn l·ªói l·∫∑p l·∫°i
                  e.target.src = 'https://via.placeholder.com/200x150?text=No+Image'; // Hi·ªÉn th·ªã ·∫£nh m·∫∑c ƒë·ªãnh n·∫øu l·ªói
                }}
              />
              <h3 className="product-name">{p.name}</h3>
              <p className="product-price">{p.price?.toLocaleString()} VNƒê</p>
              <Link to={`/product/${p.id}`} className="detail-link">
                Xem chi ti·∫øt
              </Link>
              <div className="product-actions">
                <button
                  className="add-to-cart-btn"
                  onClick={() => handleAddToCartWithAlert(p)}
                >
                  Th√™m v√†o gi·ªè h√†ng
                </button>
                <button
                  className="add-to-favorites-btn"
                  onClick={() => handleAddToFavoritesWithAlert(p)}
                >
                  Th√™m v√†o y√™u th√≠ch
                </button>
              </div>
            </div>
          ))
        ) : (
          <p>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong danh m·ª•c n√†y.</p>
        )}
      </div>
      <Footer />
    </div>
  );
};

export default ProductList;
